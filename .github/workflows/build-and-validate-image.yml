name: ci

on:
 push:
 pull_request:

jobs:
  canary:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Install Container Canary
       run: |
         curl -L https://github.com/NVIDIA/container-canary/releases/download/v0.2.1/canary_linux_amd64 > /usr/local/bin/canary
         chmod +x /usr/local/bin/canary

     - name: Build Container
       run: docker build -t bluesky/tiled:latest .

     - name: Validate container
       run: canary validate --file canary-validator.yml bluesky/tiled:latest


  benchmark:

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Setup Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: "latest"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install
      shell: bash -l {0}
      run: source continuous_integration/scripts/install.sh

    - name: Install asv
      shell: bash -l {0}
      run: |
        echo "Installing ASV"
        python -m pip install asv

    # - name: Install test requirements
    #   shell: bash -l {0}
    #   run: |
    #     set -vxeuo pipefail
    #     python -m pip install .[dev]
    #     python -m pip list
    
    - name: Run ASV
      shell: bash -l {0}
      run: |
        asv machine --yes
        asv run --python=same

  benchmark_matrix:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    # env:
    #   CONDA_ENV_FILE: ./build_envs/asv-bench.yml
    #   ASV_DIR: ./benchmarks

    steps:
      - name: Checkout tiled
        uses: actions/checkout@v4
        with:
          repository: genematx/tiled
          # repository: bluesky/tiled
          fetch-depth: 0
      # - name: Checkout geocat-comp-asv
      #   uses: actions/checkout@v4
      #   with:
      #     repository: NCAR/geocat-comp-asv
      #     persist-credentials: false
      #     fetch-depth: 0
      #     ref: main
      #     path: geocat-comp-asv

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "24.1.2-0"
          # activate-environment: asv-bench

      - name: Install asv
        shell: bash -l {0}
        run: |
          conda info
          conda list
          echo "Installing ASV"
          python -m pip install asv

      # - name: Cache environment
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.CONDA }}/envs
      #     key:
      #       conda-${{ runner.os }}--${{ runner.arch }}--${{
      #       steps.get-date.outputs.today }}-${{
      #       hashFiles('./build_envs/asv-bench.yml') }}-${{ env.CACHE_NUMBER}}
      #   env:
      #     # Increase this value to reset cache if the environment file has not changed
      #     CACHE_NUMBER: 0
      #   id: cache

      # - name: Update environment
      #   run:
      #     conda env update -n asv-bench -f
      #     ./build_envs/asv-bench.yml
      #   if: steps.cache.outputs.cache-hit != 'true'

      - name: Conda list
        run: |
          conda info
          conda list

      # - name: Copy existing results
      #   run: |
      #     if [ -d "geocat-comp-asv/results" ]; then
      #       cp -r geocat-comp-asv/results benchmarks/
      #     fi

      - name: Run benchmarks
        id: benchmark
        run: |
          asv machine --machine GH-Actions --os ubuntu-latest --arch x64 --cpu "2-core unknown" --ram 7GB
          asv run --skip-existing --parallel || true

      # - name: Commit and push benchmark results
      #   run: |
      #     if [ -d "geocat-comp-asv/results" ]; then
      #       rm -r geocat-comp-asv/results
      #     fi
      #     cp -r benchmarks/results/ geocat-comp-asv/
      #     cd geocat-comp-asv
      #     git config --local user.email "anissaz@ucar.edu"
      #     git config --local user.name "anissa111"
      #     git add results
      #     git commit -m "[ðŸ¤–] Update benchmark results"

      # - name: Push to geocat-comp-asv
      #   if: github.ref == 'refs/heads/main' && github.repository == 'NCAR/geocat-comp'
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.COMP_ASV_PAT }}
      #     branch: main
      #     force: true
      #     repository: NCAR/geocat-comp-asv
      #     directory: geocat-comp-asv

